<!--
  @description       : 
  @author            : ChangeMeIn@UserSettingsUnder.SFDoc
  @group             : 
  @last modified on  : 02-16-2023
  @last modified by  : ChangeMeIn@UserSettingsUnder.SFDoc
-->
<template>
    <template if:true={showSpin}>
        <div class="exampleHolder">
            <lightning-spinner alternative-text="Loading" size="large"></lightning-spinner>
        </div>
    </template>
    <lightning-card title="LdsCreateRecord" icon-name="standard:record">
       <div class="slds-m-around_medium">
           <lightning-input label="Id" disabled value={accountId}></lightning-input>
           <lightning-input label="Name" onchange={handleNameChange} class="slds-m-bottom_x-small"></lightning-input>
           <lightning-button label="Create Account" variant="brand" onclick={handleClick}></lightning-button>
       </div>
    </lightning-card>
</template> 








import { LightningElement } from 'lwc';
import { createRecord } from 'lightning/uiRecordApi';
import { ShowToastEvent } from 'lightning/platformShowToastEvent';
import ACCOUNT_OBJECT from '@salesforce/schema/Account';
import NAME_FIELD from '@salesforce/schema/Account.Name';

export default class Uicreaterecord extends LightningElement {
    accountId;
    name = '';
    showSpin = false;

    handleNameChange(event) {
        this.accountId = undefined;
        this.name = event.target.value;
    }
    handleClick()
    {
        this.showSpin = true;
        for(var i=0 ; i<20 ; i++)
        {
            this.createAccount('Test Name B : '+i);
            if(i==19)
            {
                this.showSpin = false;
            }
        }
        
    }
    createAccount(name) {
        const fields = {};
        fields[NAME_FIELD.fieldApiName] = name;
        const recordInput = { apiName: ACCOUNT_OBJECT.objectApiName, fields };
        createRecord(recordInput)
            .then(account => {
                //this.accountId = account.id;
                // this.dispatchEvent(
                //     new ShowToastEvent({
                //         title: 'Success',
                //         message: 'Account created',
                //         variant: 'success',
                //     }),
                // );
            })
            .catch(error => {
                // this.dispatchEvent(
                //     new ShowToastEvent({
                //         title: 'Error creating record',
                //         message: error.body.message,
                //         variant: 'error',
                //     }),
                // );
            });
    }
}
